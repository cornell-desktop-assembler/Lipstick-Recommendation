{"ast":null,"code":"import _classCallCheck from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/src/components/Dropdowns.js\";\nimport React, { Component } from 'react';\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nvar Dropdowns =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dropdowns, _Component);\n\n  function Dropdowns() {\n    _classCallCheck(this, Dropdowns);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dropdowns).apply(this, arguments));\n  }\n\n  _createClass(Dropdowns, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        class: \"dropdown-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        size: \"lg\",\n        justified: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: \"primary\",\n        id: \"dropdown-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Skin Tone: \", this.props.skinTone), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"N/A\",\n        onSelect: this.props.onChangeSkinTone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"N/A\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), this.props.options[0].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option,\n          onSelect: _this.props.onChangeSkinTone,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, option);\n      }))), React.createElement(DropdownButton, {\n        block: true,\n        as: ButtonGroup,\n        variant: 'warning',\n        title: \"Skin Type: \" + this.props.skinType,\n        id: \"bg-nested-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"N/A\",\n        onSelect: this.props.onChangeSkinType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"N/A\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), this.props.options[1].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option,\n          onSelect: _this.props.onChangeSkinType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, option);\n      })), React.createElement(DropdownButton, {\n        as: ButtonGroup,\n        variant: 'info',\n        title: \"Hair Color: \" + this.props.hairColor,\n        id: \"bg-nested-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"N/A\",\n        onSelect: this.props.onChangeHairColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"N/A\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), this.props.options[2].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option,\n          onSelect: _this.props.onChangeHairColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, option);\n      })), React.createElement(DropdownButton, {\n        as: ButtonGroup,\n        variant: 'danger',\n        title: \"Eye Color: \" + this.props.eyeColor,\n        id: \"bg-nested-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"N/A\",\n        onSelect: this.props.onChangeEyeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"N/A\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), this.props.options[3].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option,\n          onSelect: _this.props.onChangeEyeColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, option);\n      }))));\n    }\n  }]);\n\n  return Dropdowns;\n}(Component);\n\nexport default Dropdowns;","map":{"version":3,"sources":["/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/src/components/Dropdowns.js"],"names":["React","Component","DropdownButton","ButtonGroup","Dropdown","Row","Col","Dropdowns","props","skinTone","onChangeSkinTone","options","map","option","skinType","onChangeSkinType","hairColor","onChangeHairColor","eyeColor","onChangeEyeColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass Dropdowns extends Component {\n\n    render() {\n        return (\n            <div class=\"dropdown-group\">\n                <ButtonGroup size=\"lg\" justified>\n                    {/*<DropdownButton*/}\n                    {/*    block*/}\n                    {/*    as={ButtonGroup}*/}\n                    {/*    variant={'primary'}*/}\n                    {/*    title={\"Skin Tone: \" + this.props.skinTone}*/}\n                    {/*    id=\"bg-nested-dropdown\">*/}\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n                            Skin Tone: {this.props.skinTone}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeSkinTone}>N/A</Dropdown.Item>\n                            <Dropdown.Divider />\n                            {this.props.options[0].map(option => (\n                                <Dropdown.Item eventKey={option} onSelect={this.props.onChangeSkinTone}>{option}</Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    {/*</DropdownButton>*/}\n                    <DropdownButton\n                        block\n                        as={ButtonGroup}\n                        variant={'warning'}\n                        title={\"Skin Type: \" + this.props.skinType}\n                        id=\"bg-nested-dropdown\">\n                        <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeSkinType}>N/A</Dropdown.Item>\n                        <Dropdown.Divider />\n                        {this.props.options[1].map(option => (\n                            <Dropdown.Item eventKey={option} onSelect={this.props.onChangeSkinType}>{option}</Dropdown.Item>\n                        ))}\n                    </DropdownButton>\n                    <DropdownButton\n                        as={ButtonGroup}\n                        variant={'info'}\n                        title={\"Hair Color: \" + this.props.hairColor}\n                        id=\"bg-nested-dropdown\">\n                        <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeHairColor}>N/A</Dropdown.Item>\n                        <Dropdown.Divider />\n                        {this.props.options[2].map(option => (\n                            <Dropdown.Item eventKey={option} onSelect={this.props.onChangeHairColor}>{option}</Dropdown.Item>\n                        ))}\n                    </DropdownButton>\n                    <DropdownButton\n                        as={ButtonGroup}\n                        variant={'danger'}\n                        title={\"Eye Color: \" + this.props.eyeColor}\n                        id=\"bg-nested-dropdown\">\n                        <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeEyeColor}>N/A</Dropdown.Item>\n                        <Dropdown.Divider />\n                        {this.props.options[3].map(option => (\n                            <Dropdown.Item eventKey={option} onSelect={this.props.onChangeEyeColor}>{option}</Dropdown.Item>\n                        ))}\n                    </DropdownButton>\n                </ButtonGroup>\n            </div>\n        );\n    }\n}\n\nexport default Dropdowns;"]},"metadata":{},"sourceType":"module"}