{"ast":null,"code":"import _classCallCheck from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/src/components/Dropdowns.js\";\nimport React, { Component } from 'react';\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nvar Dropdowns =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dropdowns, _Component);\n\n  function Dropdowns() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dropdowns);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dropdowns)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.buttonColors = ['primary', 'warning', 'info', 'danger'];\n    _this.titles = [\"Skin Tone: \" + _this.props.skinTone, \"Skin Type: \" + _this.props.skinType, \"Hair Color: \" + _this.props.hairColor];\n    return _this;\n  }\n\n  _createClass(Dropdowns, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        class: \"dropdown-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        size: \"lg\",\n        justified: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: \"primary\",\n        id: \"dropdown-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Skin Tone: \", this.props.skinTone), React.createElement(Dropdown.Menu, {\n        flip: false,\n        alignRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"N/A\",\n        onSelect: this.props.onChangeSkinTone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"N/A\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), this.props.options[0].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option,\n          onSelect: _this2.props.onChangeSkinTone,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, option);\n      }))), React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: \"warning\",\n        id: \"dropdown-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Skin Type: \", this.props.skinType), React.createElement(Dropdown.Menu, {\n        flip: false,\n        alignRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"N/A\",\n        onSelect: this.props.onChangeSkinType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"N/A\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), this.props.options[1].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option,\n          onSelect: _this2.props.onChangeSkinType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, option);\n      }))), React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: \"info\",\n        id: \"dropdown-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Hair Color: \", this.props.hairColor), React.createElement(Dropdown.Menu, {\n        flip: false,\n        alignRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"N/A\",\n        onSelect: this.props.onChangeHairColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"N/A\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), this.props.options[2].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option,\n          onSelect: _this2.props.onChangeHairColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, option);\n      }))), React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: \"danger\",\n        id: \"dropdown-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Hair Color: \", this.props.eyeColor), React.createElement(Dropdown.Menu, {\n        flip: false,\n        alignRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"N/A\",\n        onSelect: this.props.onChangeEyeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"N/A\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), this.props.options[3].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option,\n          onSelect: _this2.props.onChangeEyeColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, option);\n      })))));\n    }\n  }]);\n\n  return Dropdowns;\n}(Component);\n\nexport default Dropdowns;","map":{"version":3,"sources":["/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/src/components/Dropdowns.js"],"names":["React","Component","DropdownButton","ButtonGroup","Dropdown","Row","Col","Dropdowns","buttonColors","titles","props","skinTone","skinType","hairColor","onChangeSkinTone","options","map","option","onChangeSkinType","onChangeHairColor","eyeColor","onChangeEyeColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass Dropdowns extends Component {\n\n    buttonColors = ['primary', 'warning', 'info', 'danger']\n    titles = [\"Skin Tone: \"+ this.props.skinTone, \"Skin Type: \"+ this.props.skinType, \"Hair Color: \"+ this.props.hairColor]\n\n    render() {\n        return (\n            <div class=\"dropdown-group\">\n                <ButtonGroup size=\"lg\" justified>\n                    {/*<DropdownButton*/}\n                    {/*    block*/}\n                    {/*    as={ButtonGroup}*/}\n                    {/*    variant={'primary'}*/}\n                    {/*    title={\"Skin Tone: \" + this.props.skinTone}*/}\n                    {/*    id=\"bg-nested-dropdown\">*/}\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n                            Skin Tone: {this.props.skinTone}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu flip={false} alignRight>\n                            <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeSkinTone}>N/A</Dropdown.Item>\n                            <Dropdown.Divider />\n                            {this.props.options[0].map(option => (\n                                <Dropdown.Item eventKey={option} onSelect={this.props.onChangeSkinTone}>{option}</Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"warning\" id=\"dropdown-basic\">\n                            Skin Type: {this.props.skinType}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu flip={false} alignRight>\n                            <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeSkinType}>N/A</Dropdown.Item>\n                            <Dropdown.Divider />\n                            {this.props.options[1].map(option => (\n                                <Dropdown.Item eventKey={option} onSelect={this.props.onChangeSkinType}>{option}</Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\n                            Hair Color: {this.props.hairColor}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu flip={false} alignRight>\n                            <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeHairColor}>N/A</Dropdown.Item>\n                            <Dropdown.Divider />\n                            {this.props.options[2].map(option => (\n                                <Dropdown.Item eventKey={option} onSelect={this.props.onChangeHairColor}>{option}</Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"danger\" id=\"dropdown-basic\">\n                            Hair Color: {this.props.eyeColor}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu flip={false} alignRight>\n                            <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeEyeColor}>N/A</Dropdown.Item>\n                            <Dropdown.Divider />\n                            {this.props.options[3].map(option => (\n                                <Dropdown.Item eventKey={option} onSelect={this.props.onChangeEyeColor}>{option}</Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </ButtonGroup>\n            </div>\n        );\n    }\n}\n\nexport default Dropdowns;"]},"metadata":{},"sourceType":"module"}