{"ast":null,"code":"import _classCallCheck from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/src/components/Dropdowns.js\";\nimport React, { Component } from 'react';\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nvar Dropdowns =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dropdowns, _Component);\n\n  function Dropdowns() {\n    _classCallCheck(this, Dropdowns);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dropdowns).apply(this, arguments));\n  }\n\n  _createClass(Dropdowns, [{\n    key: \"onChange\",\n    value: function onChange() {\n      console.log();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        class: \"dropdown-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        size: \"lg\",\n        justified: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        as: ButtonGroup,\n        variant: 'primary',\n        title: \"Skin Tone: \" + this.props.skinTone,\n        id: \"bg-nested-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"Not Selected\",\n        onSelect: this.props.onChangeSkinTone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Not Selected\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), this.props.options[0].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option,\n          onSelect: _this.props.onChangeSkinTone,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, option);\n      })), React.createElement(DropdownButton, {\n        as: ButtonGroup,\n        variant: 'warning',\n        title: \"Skin Type: \" + this.props.skinType,\n        id: \"bg-nested-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"Not Selected\",\n        onSelect: this.props.onChangeSkinType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Not Selected\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), this.props.options[1].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option,\n          onSelect: _this.props.onChangeSkinType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, option);\n      })), React.createElement(DropdownButton, {\n        as: ButtonGroup,\n        variant: 'danger',\n        title: \"Eye Color: \" + this.props.eyeColor,\n        id: \"bg-nested-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"Not Selected\",\n        onSelect: this.props.onChangeEyeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Not Selected\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), this.props.options[2].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option,\n          onSelect: _this.props.onChangeEyeColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, option);\n      }))));\n    }\n  }]);\n\n  return Dropdowns;\n}(Component);\n\nexport default Dropdowns;","map":{"version":3,"sources":["/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/src/components/Dropdowns.js"],"names":["React","Component","DropdownButton","ButtonGroup","Dropdown","Dropdowns","console","log","props","skinTone","onChangeSkinTone","options","map","option","skinType","onChangeSkinType","eyeColor","onChangeEyeColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nclass Dropdowns extends Component {\n\n\n    onChange() {\n        console.log()\n    }\n\n    render() {\n        return (\n            <div class=\"dropdown-group\">\n                <ButtonGroup size=\"lg\" justified>\n                    <DropdownButton\n                        as={ButtonGroup}\n                        variant={'primary'}\n                        title={\"Skin Tone: \" + this.props.skinTone}\n                        id=\"bg-nested-dropdown\">\n                        <Dropdown.Item eventKey=\"Not Selected\" onSelect={this.props.onChangeSkinTone}>Not Selected</Dropdown.Item>\n                        <Dropdown.Divider />\n                        {this.props.options[0].map(option => (\n                            <Dropdown.Item eventKey={option} onSelect={this.props.onChangeSkinTone}>{option}</Dropdown.Item>\n                        ))}\n                    </DropdownButton>\n                    <DropdownButton\n                        as={ButtonGroup}\n                        variant={'warning'}\n                        title={\"Skin Type: \" + this.props.skinType}\n                        id=\"bg-nested-dropdown\">\n                        <Dropdown.Item eventKey=\"Not Selected\" onSelect={this.props.onChangeSkinType}>Not Selected</Dropdown.Item>\n                        <Dropdown.Divider />\n                        {this.props.options[1].map(option => (\n                            <Dropdown.Item eventKey={option} onSelect={this.props.onChangeSkinType}>{option}</Dropdown.Item>\n                        ))}\n                    </DropdownButton>\n                    <DropdownButton\n                        as={ButtonGroup}\n                        variant={'danger'}\n                        title={\"Eye Color: \" + this.props.eyeColor}\n                        id=\"bg-nested-dropdown\">\n                        <Dropdown.Item eventKey=\"Not Selected\" onSelect={this.props.onChangeEyeColor}>Not Selected</Dropdown.Item>\n                        <Dropdown.Divider />\n                        {this.props.options[2].map(option => (\n                            <Dropdown.Item eventKey={option} onSelect={this.props.onChangeEyeColor}>{option}</Dropdown.Item>\n                        ))}\n                    </DropdownButton>\n                </ButtonGroup>\n            </div>\n        );\n    }\n}\n\nexport default Dropdowns;"]},"metadata":{},"sourceType":"module"}