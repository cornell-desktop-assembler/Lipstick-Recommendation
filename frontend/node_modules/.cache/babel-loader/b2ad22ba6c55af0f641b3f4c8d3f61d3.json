{"ast":null,"code":"import _classCallCheck from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/newRepo/Lipstick-Recommendation/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/newRepo/Lipstick-Recommendation/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/newRepo/Lipstick-Recommendation/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/newRepo/Lipstick-Recommendation/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/newRepo/Lipstick-Recommendation/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/newRepo/Lipstick-Recommendation/frontend/src/components/Dropdowns.js\";\nimport React, { Component } from 'react';\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nvar Dropdowns =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dropdowns, _Component);\n\n  function Dropdowns() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dropdowns);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dropdowns)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.buttonColors = ['primary', 'warning', 'info', 'danger'];\n    _this.titles = [\"Skin Tone: \" + _this.props.skinTone, \"Skin Type: \" + _this.props.skinType, \"Hair Color: \" + _this.props.hairColor, \"Eye Color: \" + _this.props.eyeColor];\n    _this.callbacks = [_this.props.onChangeSkinTone, _this.props.onChangeSkinType, _this.props.onChangeHairColor, _this.props.onChangeEyeColor];\n    _this.indices = [0, 1, 2, 3];\n    return _this;\n  }\n\n  _createClass(Dropdowns, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        class: \"dropdown-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        size: \"lg\",\n        justified: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        as: ButtonGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: this.props.validity[0],\n        id: \"dropdown-basic\",\n        className: \"dropdown-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Skin Tone: \", this.props.skinTone), React.createElement(Dropdown.Menu, {\n        flip: false,\n        alignRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"N/A\",\n        onSelect: this.props.onChangeSkinTone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"N/A\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), this.props.options[0].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option,\n          onSelect: _this2.props.onChangeSkinTone,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, option);\n      }))), React.createElement(Dropdown, {\n        as: ButtonGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: this.props.validity[0],\n        id: \"dropdown-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Skin Type: \", this.props.skinType), React.createElement(Dropdown.Menu, {\n        flip: false,\n        alignRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"N/A\",\n        onSelect: this.props.onChangeSkinType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"N/A\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), this.props.options[1].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option,\n          onSelect: _this2.props.onChangeSkinType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, option);\n      }))), React.createElement(Dropdown, {\n        as: ButtonGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: this.props.validity[0],\n        id: \"dropdown-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Hair Color: \", this.props.hairColor), React.createElement(Dropdown.Menu, {\n        flip: false,\n        alignRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"N/A\",\n        onSelect: this.props.onChangeHairColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"N/A\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), this.props.options[2].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option,\n          onSelect: _this2.props.onChangeHairColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, option);\n      }))), React.createElement(Dropdown, {\n        as: ButtonGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: this.props.validity[0],\n        id: \"dropdown-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Eye Color: \", this.props.eyeColor), React.createElement(Dropdown.Menu, {\n        flip: false,\n        alignRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"N/A\",\n        onSelect: this.props.onChangeEyeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"N/A\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), this.props.options[3].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option,\n          onSelect: _this2.props.onChangeEyeColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, option);\n      })))));\n    }\n  }]);\n\n  return Dropdowns;\n}(Component);\n\nexport default Dropdowns;","map":{"version":3,"sources":["/Users/charliewang/Documents/School/2019Spring/CS4300/project/newRepo/Lipstick-Recommendation/frontend/src/components/Dropdowns.js"],"names":["React","Component","DropdownButton","ButtonGroup","Dropdown","Row","Col","Dropdowns","buttonColors","titles","props","skinTone","skinType","hairColor","eyeColor","callbacks","onChangeSkinTone","onChangeSkinType","onChangeHairColor","onChangeEyeColor","indices","validity","options","map","option"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass Dropdowns extends Component {\n\n    buttonColors = ['primary', 'warning', 'info', 'danger'];\n    titles = [\"Skin Tone: \"+ this.props.skinTone, \"Skin Type: \"+ this.props.skinType, \"Hair Color: \"+ this.props.hairColor, \"Eye Color: \"+ this.props.eyeColor];\n    callbacks = [this.props.onChangeSkinTone, this.props.onChangeSkinType, this.props.onChangeHairColor, this.props.onChangeEyeColor];\n    indices = [0, 1, 2, 3];\n\n    render() {\n        return (\n            <div class=\"dropdown-group\">\n                <ButtonGroup size=\"lg\" justified>\n                    {/*{this.indices.map(i => (*/}\n                    {/*    <Dropdown>*/}\n                    {/*        <Dropdown.Toggle variant={this.buttonColors[i]} id=\"dropdown-basic\">*/}\n                    {/*            {this.titles[i]}*/}\n                    {/*        </Dropdown.Toggle>*/}\n                    {/*        <Dropdown.Menu flip={false} alignRight>*/}\n                    {/*            <Dropdown.Item eventKey=\"N/A\" onSelect={this.callbacks[i]}>N/A</Dropdown.Item>*/}\n                    {/*            <Dropdown.Divider />*/}\n                    {/*            {this.props.options[i].map(option => (*/}\n                    {/*                <Dropdown.Item eventKey={option} onSelect={this.callbacks[i]}>{option}</Dropdown.Item>*/}\n                    {/*            ))}*/}\n                    {/*        </Dropdown.Menu>*/}\n                    {/*    </Dropdown>*/}\n                    {/*))}*/}\n\n                    <Dropdown as={ButtonGroup}>\n                        <Dropdown.Toggle variant={this.props.validity[0]} id=\"dropdown-basic\" className='dropdown-1'>\n                            Skin Tone: {this.props.skinTone}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu flip={false} alignRight>\n                            <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeSkinTone}>N/A</Dropdown.Item>\n                            <Dropdown.Divider />\n                            {this.props.options[0].map(option => (\n                                <Dropdown.Item eventKey={option} onSelect={this.props.onChangeSkinTone}>{option}</Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <Dropdown as={ButtonGroup}>\n                        <Dropdown.Toggle variant={this.props.validity[0]} id=\"dropdown-basic\">\n                            Skin Type: {this.props.skinType}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu flip={false} alignRight>\n                            <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeSkinType}>N/A</Dropdown.Item>\n                            <Dropdown.Divider />\n                            {this.props.options[1].map(option => (\n                                <Dropdown.Item eventKey={option} onSelect={this.props.onChangeSkinType}>{option}</Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <Dropdown as={ButtonGroup}>\n                        <Dropdown.Toggle variant={this.props.validity[0]} id=\"dropdown-basic\">\n                            Hair Color: {this.props.hairColor}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu flip={false} alignRight>\n                            <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeHairColor}>N/A</Dropdown.Item>\n                            <Dropdown.Divider />\n                            {this.props.options[2].map(option => (\n                                <Dropdown.Item eventKey={option} onSelect={this.props.onChangeHairColor}>{option}</Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <Dropdown as={ButtonGroup}>\n                        <Dropdown.Toggle variant={this.props.validity[0]} id=\"dropdown-basic\">\n                            Eye Color: {this.props.eyeColor}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu flip={false} alignRight>\n                            <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeEyeColor}>N/A</Dropdown.Item>\n                            <Dropdown.Divider />\n                            {this.props.options[3].map(option => (\n                                <Dropdown.Item eventKey={option} onSelect={this.props.onChangeEyeColor}>{option}</Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </ButtonGroup>\n            </div>\n        );\n    }\n}\n\nexport default Dropdowns;"]},"metadata":{},"sourceType":"module"}