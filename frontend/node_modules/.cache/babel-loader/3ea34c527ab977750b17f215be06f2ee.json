{"ast":null,"code":"import _classCallCheck from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/src/components/Dropdowns.js\";\nimport React, { Component } from 'react';\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nvar Dropdowns =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dropdowns, _Component);\n\n  function Dropdowns() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dropdowns);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dropdowns)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.buttonColors = ['primary', 'warning', 'info', 'danger'];\n    _this.titles = [\"Skin Tone: \" + _this.props.skinTone, \"Skin Type: \" + _this.props.skinType, \"Hair Color: \" + _this.props.hairColor];\n    _this.callbacks = [_this.props.onChangeSkinTone, _this.props.onChangeSkinType, _this.props.onChangeHairColor, _this.props.onChangeEyeColor];\n    _this.indices = [0, 1, 2, 3];\n    return _this;\n  }\n\n  _createClass(Dropdowns, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        class: \"dropdown-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        size: \"lg\",\n        justified: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, this.indices.map(function (i) {\n        return React.createElement(Dropdown, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(Dropdown.Toggle, {\n          variant: _this2.buttonColors[i],\n          id: \"dropdown-basic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, _this2.titles[i]), React.createElement(Dropdown.Menu, {\n          flip: false,\n          alignRight: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(Dropdown.Item, {\n          eventKey: \"N/A\",\n          onSelect: _this2.callbacks[i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"N/A\"), React.createElement(Dropdown.Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }), _this2.props.options[i].map(function (option) {\n          return React.createElement(Dropdown.Item, {\n            eventKey: option,\n            onSelect: _this2.callbacks[i],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, option);\n        })));\n      })));\n    }\n  }]);\n\n  return Dropdowns;\n}(Component);\n\nexport default Dropdowns;","map":{"version":3,"sources":["/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/src/components/Dropdowns.js"],"names":["React","Component","DropdownButton","ButtonGroup","Dropdown","Row","Col","Dropdowns","buttonColors","titles","props","skinTone","skinType","hairColor","callbacks","onChangeSkinTone","onChangeSkinType","onChangeHairColor","onChangeEyeColor","indices","map","i","options","option"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;IAEMC,S;;;;;;;;;;;;;;;;;UAEFC,Y,GAAe,CAAC,SAAD,EAAY,SAAZ,EAAuB,MAAvB,EAA+B,QAA/B,C;UACfC,M,GAAS,CAAC,gBAAe,MAAKC,KAAL,CAAWC,QAA3B,EAAqC,gBAAe,MAAKD,KAAL,CAAWE,QAA/D,EAAyE,iBAAgB,MAAKF,KAAL,CAAWG,SAApG,C;UACTC,S,GAAY,CAAC,MAAKJ,KAAL,CAAWK,gBAAZ,EAA8B,MAAKL,KAAL,CAAWM,gBAAzC,EAA2D,MAAKN,KAAL,CAAWO,iBAAtE,EAAyF,MAAKP,KAAL,CAAWQ,gBAApG,C;UACZC,O,GAAU,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,C;;;;;;6BAED;AAAA;;AACL,aACI;AAAK,QAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAC,IAAlB;AAAuB,QAAA,SAAS,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKA,OAAL,CAAaC,GAAb,CAAiB,UAAAC,CAAC;AAAA,eACf,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD,CAAU,MAAV;AAAiB,UAAA,OAAO,EAAE,MAAI,CAACb,YAAL,CAAkBa,CAAlB,CAA1B;AAAgD,UAAA,EAAE,EAAC,gBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,MAAI,CAACZ,MAAL,CAAYY,CAAZ,CADL,CADJ,EAII,oBAAC,QAAD,CAAU,IAAV;AAAe,UAAA,IAAI,EAAE,KAArB;AAA4B,UAAA,UAAU,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD,CAAU,IAAV;AAAe,UAAA,QAAQ,EAAC,KAAxB;AAA8B,UAAA,QAAQ,EAAE,MAAI,CAACP,SAAL,CAAeO,CAAf,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,QAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGK,MAAI,CAACX,KAAL,CAAWY,OAAX,CAAmBD,CAAnB,EAAsBD,GAAtB,CAA0B,UAAAG,MAAM;AAAA,iBAC7B,oBAAC,QAAD,CAAU,IAAV;AAAe,YAAA,QAAQ,EAAEA,MAAzB;AAAiC,YAAA,QAAQ,EAAE,MAAI,CAACT,SAAL,CAAeO,CAAf,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA+DE,MAA/D,CAD6B;AAAA,SAAhC,CAHL,CAJJ,CADe;AAAA,OAAlB,CADL,CADJ,CADJ;AA6DH;;;;EArEmBtB,S;;AAwExB,eAAeM,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass Dropdowns extends Component {\n\n    buttonColors = ['primary', 'warning', 'info', 'danger'];\n    titles = [\"Skin Tone: \"+ this.props.skinTone, \"Skin Type: \"+ this.props.skinType, \"Hair Color: \"+ this.props.hairColor];\n    callbacks = [this.props.onChangeSkinTone, this.props.onChangeSkinType, this.props.onChangeHairColor, this.props.onChangeEyeColor];\n    indices = [0, 1, 2, 3];\n\n    render() {\n        return (\n            <div class=\"dropdown-group\">\n                <ButtonGroup size=\"lg\" justified>\n                    {this.indices.map(i => (\n                        <Dropdown>\n                            <Dropdown.Toggle variant={this.buttonColors[i]} id=\"dropdown-basic\">\n                                {this.titles[i]}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu flip={false} alignRight>\n                                <Dropdown.Item eventKey=\"N/A\" onSelect={this.callbacks[i]}>N/A</Dropdown.Item>\n                                <Dropdown.Divider />\n                                {this.props.options[i].map(option => (\n                                    <Dropdown.Item eventKey={option} onSelect={this.callbacks[i]}>{option}</Dropdown.Item>\n                                ))}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    ))}\n\n\n\n                    {/*<Dropdown>*/}\n                    {/*    <Dropdown.Toggle variant=\"warning\" id=\"dropdown-basic\">*/}\n                    {/*        Skin Type: {this.props.skinType}*/}\n                    {/*    </Dropdown.Toggle>*/}\n                    {/*    <Dropdown.Menu flip={false} alignRight>*/}\n                    {/*        <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeSkinType}>N/A</Dropdown.Item>*/}\n                    {/*        <Dropdown.Divider />*/}\n                    {/*        {this.props.options[1].map(option => (*/}\n                    {/*            <Dropdown.Item eventKey={option} onSelect={this.props.onChangeSkinType}>{option}</Dropdown.Item>*/}\n                    {/*        ))}*/}\n                    {/*    </Dropdown.Menu>*/}\n                    {/*</Dropdown>*/}\n\n                    {/*<Dropdown>*/}\n                    {/*    <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">*/}\n                    {/*        Hair Color: {this.props.hairColor}*/}\n                    {/*    </Dropdown.Toggle>*/}\n                    {/*    <Dropdown.Menu flip={false} alignRight>*/}\n                    {/*        <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeHairColor}>N/A</Dropdown.Item>*/}\n                    {/*        <Dropdown.Divider />*/}\n                    {/*        {this.props.options[2].map(option => (*/}\n                    {/*            <Dropdown.Item eventKey={option} onSelect={this.props.onChangeHairColor}>{option}</Dropdown.Item>*/}\n                    {/*        ))}*/}\n                    {/*    </Dropdown.Menu>*/}\n                    {/*</Dropdown>*/}\n\n                    {/*<Dropdown>*/}\n                    {/*    <Dropdown.Toggle variant=\"danger\" id=\"dropdown-basic\">*/}\n                    {/*        Hair Color: {this.props.eyeColor}*/}\n                    {/*    </Dropdown.Toggle>*/}\n                    {/*    <Dropdown.Menu flip={false} alignRight>*/}\n                    {/*        <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeEyeColor}>N/A</Dropdown.Item>*/}\n                    {/*        <Dropdown.Divider />*/}\n                    {/*        {this.props.options[3].map(option => (*/}\n                    {/*            <Dropdown.Item eventKey={option} onSelect={this.props.onChangeEyeColor}>{option}</Dropdown.Item>*/}\n                    {/*        ))}*/}\n                    {/*    </Dropdown.Menu>*/}\n                    {/*</Dropdown>*/}\n                </ButtonGroup>\n            </div>\n        );\n    }\n}\n\nexport default Dropdowns;"]},"metadata":{},"sourceType":"module"}