{"ast":null,"code":"import _classCallCheck from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/src/components/IndexContainer.js\";\nimport React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdowns from './Dropdowns.js';\nimport CharacteristicInput from './CharacteristicInput.js';\nimport BrandInput from './BrandInput.js';\nimport '../App.css';\nimport Button from \"react-bootstrap/Button\";\n\nvar IndexContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IndexContainer, _Component);\n\n  function IndexContainer(props) {\n    var _this;\n\n    _classCallCheck(this, IndexContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IndexContainer).call(this, props));\n    _this.state = {\n      characteristicInput: '',\n      brandInput: '',\n      skinTone: 'Not Selected',\n      skinType: 'Not Selected',\n      eyeColor: 'Not Selected',\n      submitDisabled: true,\n      submitColor: 'light'\n    };\n    _this.handleChangeCharacteristicInput = _this.handleChangeCharacteristicInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeBrandInput = _this.handleChangeBrandInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeSkinTone = _this.handleChangeSkinTone.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeSkinType = _this.handleChangeSkinType.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeEyeColor = _this.handleChangeEyeColor.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClickSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.options = [['Dark', 'Light'], ['Dry', 'Moderate', 'Oily'], ['Black', 'Brown', 'Green', 'Blue', 'Grey', 'White']];\n    return _this;\n  }\n\n  _createClass(IndexContainer, [{\n    key: \"checkViability\",\n    value: function checkViability() {\n      var viable = !(this.state.characteristicInput === '' && this.state.skinTone === 'Not Selected' && this.state.skinType === 'Not Selected' && this.state.eyeColor === 'Not Selected');\n      this.setState({\n        submitDisabled: !viable,\n        submitColor: viable ? 'success' : 'light'\n      });\n    }\n  }, {\n    key: \"handleChangeCharacteristicInput\",\n    value: function handleChangeCharacteristicInput(event) {\n      this.setState({\n        characteristicInput: event.target.value\n      }, this.checkViability);\n    }\n  }, {\n    key: \"handleChangeBrandInput\",\n    value: function handleChangeBrandInput(event) {\n      this.setState({\n        brandInput: event.target.value\n      }, this.checkViability);\n    }\n  }, {\n    key: \"handleChangeSkinTone\",\n    value: function handleChangeSkinTone(eventKey) {\n      this.setState({\n        skinTone: eventKey\n      }, this.checkViability);\n    }\n  }, {\n    key: \"handleChangeSkinType\",\n    value: function handleChangeSkinType(eventKey) {\n      this.setState({\n        skinType: eventKey\n      }, this.checkViability);\n    }\n  }, {\n    key: \"handleChangeEyeColor\",\n    value: function handleChangeEyeColor(eventKey) {\n      this.setState({\n        eyeColor: eventKey\n      }, this.checkViability);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var characteristicInputs = this.state.characteristicInput.replace(', ', ' ').replace(',', ' ').split(' ');\n      var brandInputs = this.state.brandInput.replace(', ', ' ').replace(',', ' ').split(' '); //TODO: connect to backend\n\n      alert('Your query is: \\n' + 'keywords: ' + characteristicInputs + '\\n' + 'brand: ' + brandInputs + '\\n' + 'skin tone: ' + this.state.skinTone + '\\n' + 'skin type: ' + this.state.skinType + '\\n' + 'eye color: ' + this.state.eyeColor);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(CharacteristicInput, {\n        data: this.state.characteristicInput,\n        onChange: this.handleChangeCharacteristicInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(BrandInput, {\n        data: this.state.brandInput,\n        onChange: this.handleChangeBrandInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Dropdowns, {\n        options: this.options,\n        skinTone: this.state.skinTone,\n        skinType: this.state.skinType,\n        eyeColor: this.state.eyeColor,\n        onChangeSkinTone: this.handleChangeSkinTone,\n        onChangeSkinType: this.handleChangeSkinType,\n        onChangeEyeColor: this.handleChangeEyeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        style: {\n          marginTop: 4 + 'em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: this.state.submitDisabled,\n        variant: this.state.submitColor,\n        size: \"lg\",\n        onClick: this.onClickSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Find your match!\")))));\n    }\n  }]);\n\n  return IndexContainer;\n}(Component);\n\nexport default IndexContainer;","map":{"version":3,"sources":["/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/src/components/IndexContainer.js"],"names":["React","Component","Container","Row","Col","Dropdowns","CharacteristicInput","BrandInput","Button","IndexContainer","props","state","characteristicInput","brandInput","skinTone","skinType","eyeColor","submitDisabled","submitColor","handleChangeCharacteristicInput","bind","handleChangeBrandInput","handleChangeSkinTone","handleChangeSkinType","handleChangeEyeColor","onClickSubmit","handleSubmit","options","viable","setState","event","target","value","checkViability","eventKey","characteristicInputs","replace","split","brandInputs","alert","marginTop"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,mBAAP,MAAgC,0BAAhC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;IAEMC,c;;;;;AACF,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,wFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,mBAAmB,EAAE,EADZ;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,QAAQ,EAAE,cAHD;AAITC,MAAAA,QAAQ,EAAE,cAJD;AAKTC,MAAAA,QAAQ,EAAE,cALD;AAMTC,MAAAA,cAAc,EAAE,IANP;AAOTC,MAAAA,WAAW,EAAE;AAPJ,KAAb;AASA,UAAKC,+BAAL,GAAuC,MAAKA,+BAAL,CAAqCC,IAArC,uDAAvC;AACA,UAAKC,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BD,IAA5B,uDAA9B;AACA,UAAKE,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BF,IAA1B,uDAA5B;AACA,UAAKG,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BH,IAA1B,uDAA5B;AACA,UAAKI,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BJ,IAA1B,uDAA5B;AACA,UAAKK,aAAL,GAAqB,MAAKC,YAAL,CAAkBN,IAAlB,uDAArB;AAEA,UAAKO,OAAL,GAAe,CAAC,CAAC,MAAD,EAAS,OAAT,CAAD,EACX,CAAC,KAAD,EAAQ,UAAR,EAAoB,MAApB,CADW,EAEX,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C,OAA5C,CAFW,CAAf;AAlBe;AAqBlB;;;;qCAEgB;AACb,UAAIC,MAAM,GAAG,EAAE,KAAKjB,KAAL,CAAWC,mBAAX,KAAmC,EAAnC,IACX,KAAKD,KAAL,CAAWG,QAAX,KAAwB,cADb,IAEX,KAAKH,KAAL,CAAWI,QAAX,KAAwB,cAFb,IAGX,KAAKJ,KAAL,CAAWK,QAAX,KAAwB,cAHf,CAAb;AAIA,WAAKa,QAAL,CAAc;AACVZ,QAAAA,cAAc,EAAE,CAACW,MADP;AAEVV,QAAAA,WAAW,EAAEU,MAAM,GAAE,SAAF,GAAc;AAFvB,OAAd;AAIH;;;oDAE+BE,K,EAAO;AACnC,WAAKD,QAAL,CAAc;AACVjB,QAAAA,mBAAmB,EAAEkB,KAAK,CAACC,MAAN,CAAaC;AADxB,OAAd,EAEG,KAAKC,cAFR;AAGH;;;2CAEsBH,K,EAAO;AAC1B,WAAKD,QAAL,CAAc;AACVhB,QAAAA,UAAU,EAAEiB,KAAK,CAACC,MAAN,CAAaC;AADf,OAAd,EAEG,KAAKC,cAFR;AAGH;;;yCAEoBC,Q,EAAU;AAC3B,WAAKL,QAAL,CAAc;AACVf,QAAAA,QAAQ,EAAEoB;AADA,OAAd,EAEG,KAAKD,cAFR;AAGH;;;yCAEoBC,Q,EAAU;AAC3B,WAAKL,QAAL,CAAc;AACVd,QAAAA,QAAQ,EAAEmB;AADA,OAAd,EAEG,KAAKD,cAFR;AAGH;;;yCAEoBC,Q,EAAU;AAC3B,WAAKL,QAAL,CAAc;AACVb,QAAAA,QAAQ,EAAEkB;AADA,OAAd,EAEG,KAAKD,cAFR;AAGH;;;mCAEc;AACX,UAAIE,oBAAoB,GAAG,KAAKxB,KAAL,CAAWC,mBAAX,CAA+BwB,OAA/B,CAAuC,IAAvC,EAA6C,GAA7C,EACtBA,OADsB,CACd,GADc,EACT,GADS,EAEtBC,KAFsB,CAEhB,GAFgB,CAA3B;AAGA,UAAIC,WAAW,GAAG,KAAK3B,KAAL,CAAWE,UAAX,CAAsBuB,OAAtB,CAA8B,IAA9B,EAAoC,GAApC,EACbA,OADa,CACL,GADK,EACA,GADA,EAEbC,KAFa,CAEP,GAFO,CAAlB,CAJW,CAQX;;AACAE,MAAAA,KAAK,CAAC,sBACA,YADA,GACeJ,oBADf,GACsC,IADtC,GAEA,SAFA,GAEYG,WAFZ,GAE0B,IAF1B,GAGA,aAHA,GAGgB,KAAK3B,KAAL,CAAWG,QAH3B,GAGsC,IAHtC,GAIA,aAJA,GAIgB,KAAKH,KAAL,CAAWI,QAJ3B,GAIsC,IAJtC,GAKA,aALA,GAKgB,KAAKJ,KAAL,CAAWK,QAL5B,CAAL;AAMH;;;6BAEQ;AACL,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,mBAAD;AACI,QAAA,IAAI,EAAE,KAAKL,KAAL,CAAWC,mBADrB;AAEI,QAAA,QAAQ,EAAE,KAAKO,+BAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,EASI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACI,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWE,UADrB;AAEI,QAAA,QAAQ,EAAE,KAAKQ,sBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CATJ,EAiBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,OAAO,EAAE,KAAKM,OADlB;AAEI,QAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWG,QAFzB;AAGI,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,QAHzB;AAII,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAJzB;AAKI,QAAA,gBAAgB,EAAE,KAAKM,oBAL3B;AAMI,QAAA,gBAAgB,EAAE,KAAKC,oBAN3B;AAOI,QAAA,gBAAgB,EAAE,KAAKC,oBAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CAjBJ,EA8BI;AAAK,QAAA,KAAK,EAAE;AAACgB,UAAAA,SAAS,EAAE,IAAI;AAAhB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWM,cADzB;AAEI,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,WAFxB;AAGI,QAAA,IAAI,EAAC,IAHT;AAII,QAAA,OAAO,EAAE,KAAKO,aAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ,CADJ,CA9BJ,CADJ;AA6CH;;;;EAhIwBxB,S;;AAmI7B,eAAeQ,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdowns from './Dropdowns.js'\nimport CharacteristicInput from './CharacteristicInput.js'\nimport BrandInput from './BrandInput.js'\nimport '../App.css'\nimport Button from \"react-bootstrap/Button\";\n\nclass IndexContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            characteristicInput: '',\n            brandInput: '',\n            skinTone: 'Not Selected',\n            skinType: 'Not Selected',\n            eyeColor: 'Not Selected',\n            submitDisabled: true,\n            submitColor: 'light'\n        };\n        this.handleChangeCharacteristicInput = this.handleChangeCharacteristicInput.bind(this);\n        this.handleChangeBrandInput = this.handleChangeBrandInput.bind(this);\n        this.handleChangeSkinTone = this.handleChangeSkinTone.bind(this);\n        this.handleChangeSkinType = this.handleChangeSkinType.bind(this);\n        this.handleChangeEyeColor = this.handleChangeEyeColor.bind(this);\n        this.onClickSubmit = this.handleSubmit.bind(this);\n\n        this.options = [['Dark', 'Light'],\n            ['Dry', 'Moderate', 'Oily'],\n            ['Black', 'Brown', 'Green', 'Blue', 'Grey', 'White']]\n    }\n\n    checkViability() {\n        let viable = !(this.state.characteristicInput === '' &&\n            this.state.skinTone === 'Not Selected' &&\n            this.state.skinType === 'Not Selected' &&\n            this.state.eyeColor === 'Not Selected');\n        this.setState({\n            submitDisabled: !viable,\n            submitColor: viable? 'success' : 'light'\n        });\n    }\n\n    handleChangeCharacteristicInput(event) {\n        this.setState({\n            characteristicInput: event.target.value\n        }, this.checkViability);\n    }\n\n    handleChangeBrandInput(event) {\n        this.setState({\n            brandInput: event.target.value\n        }, this.checkViability);\n    }\n\n    handleChangeSkinTone(eventKey) {\n        this.setState({\n            skinTone: eventKey\n        }, this.checkViability);\n    }\n\n    handleChangeSkinType(eventKey) {\n        this.setState({\n            skinType: eventKey\n        }, this.checkViability);\n    }\n\n    handleChangeEyeColor(eventKey) {\n        this.setState({\n            eyeColor: eventKey\n        }, this.checkViability);\n    }\n\n    handleSubmit() {\n        let characteristicInputs = this.state.characteristicInput.replace(', ', ' ')\n            .replace(',', ' ')\n            .split(' ');\n        let brandInputs = this.state.brandInput.replace(', ', ' ')\n            .replace(',', ' ')\n            .split(' ');\n\n        //TODO: connect to backend\n        alert('Your query is: \\n' +\n              'keywords: ' + characteristicInputs + '\\n' +\n              'brand: ' + brandInputs + '\\n' +\n              'skin tone: ' + this.state.skinTone + '\\n' +\n              'skin type: ' + this.state.skinType + '\\n' +\n              'eye color: ' + this.state.eyeColor)\n    }\n\n    render() {\n        return (\n            <Container >\n                <Row>\n                    <Col>\n                        <CharacteristicInput\n                            data={this.state.characteristicInput}\n                            onChange={this.handleChangeCharacteristicInput}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <BrandInput\n                            data={this.state.brandInput}\n                            onChange={this.handleChangeBrandInput}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Dropdowns\n                            options={this.options}\n                            skinTone={this.state.skinTone}\n                            skinType={this.state.skinType}\n                            eyeColor={this.state.eyeColor}\n                            onChangeSkinTone={this.handleChangeSkinTone}\n                            onChangeSkinType={this.handleChangeSkinType}\n                            onChangeEyeColor={this.handleChangeEyeColor}\n                        />\n                    </Col>\n                </Row>\n                <div style={{marginTop: 4 + 'em'}}>\n                    <Row>\n                        <Col>\n                            <Button\n                                disabled={this.state.submitDisabled}\n                                variant={this.state.submitColor}\n                                size=\"lg\"\n                                onClick={this.onClickSubmit}\n                            >Find your match!</Button>\n                        </Col>\n                    </Row>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default IndexContainer;"]},"metadata":{},"sourceType":"module"}