{"ast":null,"code":"import _classCallCheck from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/src/components/Dropdowns.js\";\nimport React, { Component } from 'react';\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nvar Dropdowns =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dropdowns, _Component);\n\n  function Dropdowns() {\n    _classCallCheck(this, Dropdowns);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dropdowns).apply(this, arguments));\n  }\n\n  _createClass(Dropdowns, [{\n    key: \"onChange\",\n    value: function onChange() {\n      console.log();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        class: \"dropdown-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        size: \"lg\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, this.props.options[0].map(function (option) {\n        return React.createElement(DropdownButton, {\n          drop: direction,\n          variant: \"secondary\",\n          title: \" Drop \".concat(direction, \" \"),\n          id: \"dropdown-button-drop-\".concat(direction),\n          key: direction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(Dropdown.Item, {\n          eventKey: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Action\"), React.createElement(Dropdown.Item, {\n          eventKey: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Another action\"), React.createElement(Dropdown.Item, {\n          eventKey: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"Something else here\"), React.createElement(Dropdown.Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }), React.createElement(Dropdown.Item, {\n          eventKey: \"4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Separated link\"));\n      }), React.createElement(DropdownButton, {\n        as: ButtonGroup,\n        variant: 'primary',\n        title: \"Skin Tone: \" + this.props.skinTone,\n        id: \"bg-nested-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.options[0].map(function (option) {\n        return React.createElement(Dropdown.Item, {\n          eventKey: option.toLowerCase(),\n          onSelect: _this.props.onChangeSkinTone,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, option);\n      })), React.createElement(DropdownButton, {\n        as: ButtonGroup,\n        variant: 'warning',\n        title: \"Skin Type: \" + this.props.skinType,\n        id: \"bg-nested-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"ns\",\n        onSelect: this.props.onChangeSkinType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Not Selected\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(Dropdown.Item, {\n        eventKey: \"oily\",\n        onSelect: this.props.onChangeSkinType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Oily\"), React.createElement(Dropdown.Item, {\n        eventKey: \"moderate\",\n        onSelect: this.props.onChangeSkinType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Moderate\"), React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        onSelect: this.props.onChangeSkinType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Dry\")), React.createElement(DropdownButton, {\n        as: ButtonGroup,\n        variant: 'danger',\n        title: \"Eye Color: \" + this.props.eyeColor,\n        id: \"bg-nested-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        eventKey: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Not Selected\"), React.createElement(Dropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Dropdown.Item, {\n        eventKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Black\"), React.createElement(Dropdown.Item, {\n        eventKey: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Brown\"), React.createElement(Dropdown.Item, {\n        eventKey: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Green\"), React.createElement(Dropdown.Item, {\n        eventKey: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Blue\"), React.createElement(Dropdown.Item, {\n        eventKey: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Grey\"), React.createElement(Dropdown.Item, {\n        eventKey: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"White\"))));\n    }\n  }]);\n\n  return Dropdowns;\n}(Component);\n\nexport default Dropdowns;","map":{"version":3,"sources":["/Users/charliewang/Documents/School/2019Spring/CS4300/project/desktop-assembler/frontend/src/components/Dropdowns.js"],"names":["React","Component","DropdownButton","ButtonGroup","Dropdown","Dropdowns","console","log","props","options","map","option","direction","skinTone","toLowerCase","onChangeSkinTone","skinType","onChangeSkinType","eyeColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nclass Dropdowns extends Component {\n\n\n    onChange() {\n        console.log()\n    }\n\n    render() {\n        return (\n            <div class=\"dropdown-group\">\n                <ButtonGroup size=\"lg\" block>\n                    {this.props.options[0].map(option => (\n                        <DropdownButton\n                            drop={direction}\n                            variant=\"secondary\"\n                            title={` Drop ${direction} `}\n                            id={`dropdown-button-drop-${direction}`}\n                            key={direction}\n                        >\n                            <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                        </DropdownButton>\n                    ))}\n\n\n                    <DropdownButton\n                        as={ButtonGroup}\n                        variant={'primary'}\n                        title={\"Skin Tone: \" + this.props.skinTone}\n                        id=\"bg-nested-dropdown\">\n                            {this.props.options[0].map(option => (\n                                <Dropdown.Item eventKey={option.toLowerCase()} onSelect={this.props.onChangeSkinTone}>{option}</Dropdown.Item>\n                            ))}\n                            {/*<Dropdown.Item eventKey=\"ns\" onSelect={this.props.onChangeSkinTone}>Not Selected</Dropdown.Item>*/}\n                            {/*<Dropdown.Divider />*/}\n                            {/*<Dropdown.Item eventKey=\"dark\" onSelect={this.props.onChangeSkinTone}>Dark</Dropdown.Item>*/}\n                            {/*<Dropdown.Item eventKey=\"light\" onSelect={this.props.onChangeSkinTone}>Light</Dropdown.Item>*/}\n                    </DropdownButton>\n                    <DropdownButton as={ButtonGroup} variant={'warning'}  title={\"Skin Type: \" + this.props.skinType} id=\"bg-nested-dropdown\">\n                        <Dropdown.Item eventKey=\"ns\" onSelect={this.props.onChangeSkinType}>Not Selected</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"oily\" onSelect={this.props.onChangeSkinType}>Oily</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"moderate\" onSelect={this.props.onChangeSkinType}>Moderate</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"3\" onSelect={this.props.onChangeSkinType}>Dry</Dropdown.Item>\n                    </DropdownButton>\n                    <DropdownButton as={ButtonGroup} variant={'danger'} title={\"Eye Color: \" + this.props.eyeColor} id=\"bg-nested-dropdown\">\n                        <Dropdown.Item eventKey=\"0\">Not Selected</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"1\">Black</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"2\">Brown</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"3\">Green</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"4\">Blue</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"5\">Grey</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"6\">White</Dropdown.Item>\n                    </DropdownButton>\n                </ButtonGroup>\n            </div>\n        );\n    }\n}\n\nexport default Dropdowns;"]},"metadata":{},"sourceType":"module"}