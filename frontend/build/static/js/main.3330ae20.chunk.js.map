{"version":3,"sources":["images/title.png","components/Dropdowns.js","components/CharacteristicInput.js","components/BrandInput.js","components/IndexContainer.js","components/OutputContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Dropdowns","buttonColors","titles","_this","props","skinTone","skinType","hairColor","eyeColor","callbacks","onChangeSkinTone","onChangeSkinType","onChangeHairColor","onChangeEyeColor","indices","_this2","this","react_default","a","createElement","class","ButtonGroup_default","size","justified","Dropdown_default","as","ButtonGroup","Toggle","variant","id","Menu","flip","alignRight","Item","eventKey","onSelect","Divider","options","map","option","Component","CharacteristicInput","Form_default","Group","controlId","Control","type","value","data","onChange","placeholder","Text","className","BrandInput","IndexContainer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onFormSubmit","e","preventDefault","state","characteristicInput","replace","split","brandInput","submitDisabled","onClick","submitColor","handleChangeCharacteristicInput","bind","assertThisInitialized","handleChangeBrandInput","handleChangeSkinTone","handleChangeSkinType","handleChangeHairColor","handleChangeEyeColor","viable","setState","console","log","event","target","checkViability","Container_default","onSubmit","Row_default","Col_default","components_CharacteristicInput","components_BrandInput","components_Dropdowns","style","marginTop","marginBottom","Button_default","disabled","OutputContainer","pictureUrls","urls","texts","prices","colors","keywords","showDummy","showOutput","response","listing","Card_default","width","Body","Title","CardDeck_default","index","Img","src","Subtitle","ListGroup_default","ListGroupItem_default","Link","href","returnToSearch","App","names","scores","submitQuery","sendToBackend","query","axios","get","then","printResponse","_this3","scrollToOutput","scrollToComponent","output","align","duration","top","_this4","rel","integrity","crossOrigin","ref","section","require","components_IndexContainer","components_OutputContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3330ae20.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/title.28f4ada6.png\";","import React, { Component } from 'react';\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass Dropdowns extends Component {\n\n    buttonColors = ['primary', 'warning', 'info', 'danger'];\n    titles = [\"Skin Tone: \"+ this.props.skinTone, \"Skin Type: \"+ this.props.skinType, \"Hair Color: \"+ this.props.hairColor, \"Eye Color: \"+ this.props.eyeColor];\n    callbacks = [this.props.onChangeSkinTone, this.props.onChangeSkinType, this.props.onChangeHairColor, this.props.onChangeEyeColor];\n    indices = [0, 1, 2, 3];\n\n    render() {\n        return (\n            <div class=\"dropdown-group\">\n                <ButtonGroup size=\"lg\" justified>\n                    {/*{this.indices.map(i => (*/}\n                    {/*    <Dropdown>*/}\n                    {/*        <Dropdown.Toggle variant={this.buttonColors[i]} id=\"dropdown-basic\">*/}\n                    {/*            {this.titles[i]}*/}\n                    {/*        </Dropdown.Toggle>*/}\n                    {/*        <Dropdown.Menu flip={false} alignRight>*/}\n                    {/*            <Dropdown.Item eventKey=\"N/A\" onSelect={this.callbacks[i]}>N/A</Dropdown.Item>*/}\n                    {/*            <Dropdown.Divider />*/}\n                    {/*            {this.props.options[i].map(option => (*/}\n                    {/*                <Dropdown.Item eventKey={option} onSelect={this.callbacks[i]}>{option}</Dropdown.Item>*/}\n                    {/*            ))}*/}\n                    {/*        </Dropdown.Menu>*/}\n                    {/*    </Dropdown>*/}\n                    {/*))}*/}\n\n                    <Dropdown as={ButtonGroup}>\n                        <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n                            Skin Tone: {this.props.skinTone}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu flip={false} alignRight>\n                            <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeSkinTone}>N/A</Dropdown.Item>\n                            <Dropdown.Divider />\n                            {this.props.options[0].map(option => (\n                                <Dropdown.Item eventKey={option} onSelect={this.props.onChangeSkinTone}>{option}</Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <Dropdown as={ButtonGroup}>\n                        <Dropdown.Toggle variant=\"warning\" id=\"dropdown-basic\">\n                            Skin Type: {this.props.skinType}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu flip={false} alignRight>\n                            <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeSkinType}>N/A</Dropdown.Item>\n                            <Dropdown.Divider />\n                            {this.props.options[1].map(option => (\n                                <Dropdown.Item eventKey={option} onSelect={this.props.onChangeSkinType}>{option}</Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <Dropdown as={ButtonGroup}>\n                        <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\n                            Hair Color: {this.props.hairColor}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu flip={false} alignRight>\n                            <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeHairColor}>N/A</Dropdown.Item>\n                            <Dropdown.Divider />\n                            {this.props.options[2].map(option => (\n                                <Dropdown.Item eventKey={option} onSelect={this.props.onChangeHairColor}>{option}</Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <Dropdown as={ButtonGroup}>\n                        <Dropdown.Toggle variant=\"danger\" id=\"dropdown-basic\">\n                            Eye Color: {this.props.eyeColor}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu flip={false} alignRight>\n                            <Dropdown.Item eventKey=\"N/A\" onSelect={this.props.onChangeEyeColor}>N/A</Dropdown.Item>\n                            <Dropdown.Divider />\n                            {this.props.options[3].map(option => (\n                                <Dropdown.Item eventKey={option} onSelect={this.props.onChangeEyeColor}>{option}</Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </ButtonGroup>\n            </div>\n        );\n    }\n}\n\nexport default Dropdowns;","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\n\nclass CharacteristicInput extends Component {\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Control type=\"string\"\n                                      value={this.props.data}\n                                      onChange={this.props.onChange}\n                                      placeholder=\"Keyword(s)\" />\n                        <Form.Text className=\"text\" size=\"lg\">\n                            Enter anything on your mind from product characteristics (like \"moist\") to use cases (like \"interview\")\n                        </Form.Text>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default CharacteristicInput","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\n\nclass BrandInput extends Component {\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Control type=\"string\"\n                                      value={this.props.data}\n                                      onChange={this.props.onChange}\n                                      placeholder=\"Brand(s)\" />\n                        <Form.Text className=\"text\" size=\"lg\">\n                            Enter this field if you have a strong preference\n                        </Form.Text>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default BrandInput","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Dropdowns from './Dropdowns.js'\nimport CharacteristicInput from './CharacteristicInput.js'\nimport BrandInput from './BrandInput.js'\nimport '../css/App.css'\nimport Button from \"react-bootstrap/Button\";\n\nclass IndexContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            characteristicInput: '',\n            brandInput: '',\n            skinTone: 'N/A',\n            skinType: 'N/A',\n            hairColor: 'N/A',\n            eyeColor: 'N/A',\n            submitDisabled: true,\n            submitColor: 'light'\n        };\n        this.handleChangeCharacteristicInput = this.handleChangeCharacteristicInput.bind(this);\n        this.handleChangeBrandInput = this.handleChangeBrandInput.bind(this);\n        this.handleChangeSkinTone = this.handleChangeSkinTone.bind(this);\n        this.handleChangeSkinType = this.handleChangeSkinType.bind(this);\n        this.handleChangeHairColor = this.handleChangeHairColor.bind(this);\n        this.handleChangeEyeColor = this.handleChangeEyeColor.bind(this);\n\n        this.options = [['Dark', 'Light', 'Ebony', 'Deep', 'Medium', 'Porcelain', 'Fair', 'Olive', 'Tan'],\n            ['Dry', 'Normal', 'Oily', 'Combination'],\n            ['Gray', 'Auburn', 'Blonde', 'Black', 'Black', 'Red', 'Brunette'],\n            ['Brown', 'Green', 'Blue', 'Gray', 'Hazel']]\n    }\n\n    checkViability() {\n        let viable = !(this.state.characteristicInput === '' &&\n            this.state.skinTone === 'N/A' &&\n            this.state.skinType === 'N/A' &&\n            this.state.hairColor === 'N/A' &&\n            this.state.eyeColor === 'N/A');\n        this.setState({\n            submitDisabled: !viable,\n            submitColor: viable? 'light' : 'light'\n        }, () => console.log(this.state));\n    }\n\n    handleChangeCharacteristicInput(event) {\n        this.setState({\n            characteristicInput: event.target.value\n        }, this.checkViability);\n    }\n\n    handleChangeBrandInput(event) {\n        this.setState({\n            brandInput: event.target.value\n        }, this.checkViability);\n    }\n\n    handleChangeSkinTone(eventKey) {\n        this.setState({\n            skinTone: eventKey\n        }, this.checkViability);\n    }\n\n    handleChangeSkinType(eventKey) {\n        this.setState({\n            skinType: eventKey\n        }, this.checkViability);\n    }\n\n    handleChangeHairColor(eventKey) {\n        this.setState({\n            hairColor: eventKey\n        }, this.checkViability);\n    }\n\n    handleChangeEyeColor(eventKey) {\n        this.setState({\n            eyeColor: eventKey\n        }, this.checkViability);\n    }\n\n    onFormSubmit = e => {\n        e.preventDefault();\n        let characteristicInputs = this.state.characteristicInput.replace(', ', ' ')\n            .replace(',', ' ')\n            .split(' ');\n        let brandInputs = this.state.brandInput.replace(', ', ' ')\n            .replace(',', ' ')\n            .split(' ');\n\n        //TODO: connect to backend\n        let query = 'Your query is: \\n' +\n            '-- Keywords: ' + characteristicInputs + '\\n' +\n            '-- Brand: ' + brandInputs + '\\n' +\n            '-- Skin tone: ' + this.state.skinTone + '\\n' +\n            '-- Skin type: ' + this.state.skinType + '\\n' +\n            '-- Hair color: ' + this.state.hairColor + '\\n' +\n            '-- Eye color: ' + this.state.eyeColor;\n        if (!this.state.submitDisabled)\n            this.props.onClick(this.state.characteristicInput)\n    };\n\n    render() {\n        return (\n            <Container>\n                <Form onSubmit={this.onFormSubmit}>\n                <Row>\n                    <Col>\n                        <CharacteristicInput\n                            data={this.state.characteristicInput}\n                            onChange={this.handleChangeCharacteristicInput}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <BrandInput\n                            data={this.state.brandInput}\n                            onChange={this.handleChangeBrandInput}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Dropdowns\n                            options={this.options}\n                            skinTone={this.state.skinTone}\n                            skinType={this.state.skinType}\n                            hairColor={this.state.hairColor}\n                            eyeColor={this.state.eyeColor}\n                            onChangeSkinTone={this.handleChangeSkinTone}\n                            onChangeSkinType={this.handleChangeSkinType}\n                            onChangeHairColor={this.handleChangeHairColor}\n                            onChangeEyeColor={this.handleChangeEyeColor}\n                        />\n                    </Col>\n                </Row>\n                <div style={{marginTop: 5.5 + 'em', marginBottom: 5.5 + 'em'}}>\n                    <Row>\n                        <Col>\n                            <Button\n                                type=\"submit\"\n                                disabled={this.state.submitDisabled}\n                                variant={this.state.submitColor}\n                                size=\"lg\"\n                            >Find your match!</Button>\n                        </Col>\n                    </Row>\n                </div>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default IndexContainer;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport '../css/output.css'\n\nclass OutputContainer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDummy: false\n        }\n    }\n\n    pictureUrls = [\"https://www.sephora.com/productimages/sku/s2129922-main-zoom.jpg\",\n        \"https://www.sephora.com/productimages/sku/s2012748-main-zoom.jpg\",\n        \"https://www.sephora.com/productimages/sku/s1890623-main-zoom.jpg\",\n        \"https://www.sephora.com/productimages/sku/s1900083-main-zoom.jpg\"];\n    urls = [\"https://www.sephora.com/product/rouge-pur-couture-matte-slim-lipstick-P436506?icid2=products%20grid:p436506:product\",\n        \"https://www.sephora.com/product/mattetrance-lipstick-P421813?icid2=products%20grid:p421813:product\",\n        \"https://www.sephora.com/product/everlasting-love-liquid-lipstick-P384954?icid2=products%20grid:p384954:product\",\n        \"https://www.sephora.com/product/velvet-matte-lip-pencil-P78834?icid2=products%20grid:p78834:product\"\n    ];\n    titles = [\"YVES SAINT LAURENT\", \"PAT MCGRATH LABS\", \"KAT VON D\", \"NARS\"];\n    texts = [\"Rouge Pur Couture The Slim Matte Lipstick\", \"MatteTrance™ Lipstick\", \"Everlasting Liquid Lipstick\", \"Velvet Matte Lipstick Pencil\"];\n    prices = [\"39.00\", \"38.00\", \"20.00\", \"27.00\"];\n    colors = [\"4 Fuchsia Excentrique - soft raspberry\", \"Omi 107 - mid-tone rose\", \"Lovecraft - mauve pink nude\", \"Do Me Baby - chestnut rose\"];\n    keywords = [\"super-slim\", \"luxurious\", \"long-wear\", \"cult-favorite\"];\n\n    showDummy() {\n        this.setState({\n            showDummy: true\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                { this.props.showOutput ?\n                <div className=\"output-parent\">\n                    <Container>\n                        <Row>\n                            <Col>\n                                <Container>\n                                {this.props.response.map(listing => (\n                                    <Row>\n                                        <Card style={{ width: '100rem' }}>\n                                            <Card.Body>\n                                                <Card.Title>Score: {listing['score']}; SKU: {listing['name']}</Card.Title>\n                                            </Card.Body>\n                                        </Card>\n                                    </Row>\n                                ))}\n                                </Container>\n                            </Col>\n                            <Col>\n                                <Button onClick={this.showDummy()}>dummy output</Button>\n                            </Col>\n                        </Row>\n\n                        { this.showDummy ?\n                        <Row>\n                        <Container>\n                            <Row>\n                                <CardDeck>\n                                    {[1,2,3,4].map(index => (\n                                        <Card style={{ width: '22rem' }}>\n                                            <Card.Img variant=\"top\" src={this.pictureUrls[index-1]} />\n                                            <Card.Body>\n                                                <Card.Title>{index}. {this.titles[index-1]}</Card.Title>\n                                                <Card.Subtitle>{this.texts[index-1]}</Card.Subtitle>\n                                                {/*<Card.Text>*/}\n                                                {/*    Keywords: {this.keywords[index-1]}*/}\n                                                {/*</Card.Text>*/}\n                                            </Card.Body>\n                                            <ListGroup className=\"list-group-flush\">\n                                                <ListGroupItem>Keywords: {this.keywords[index-1]}</ListGroupItem>\n                                                <ListGroupItem>Price: ${this.prices[index-1]}</ListGroupItem>\n                                                <ListGroupItem>Color: {this.colors[index-1]}</ListGroupItem>\n                                            </ListGroup>\n                                            <Card.Body>\n                                                <Card.Link href={this.urls[index-1]}>Product Link on Sephora.com</Card.Link>\n                                            </Card.Body>\n                                            {/*<Card.Footer>*/}\n                                            {/*    <small className=\"text-muted\">Last updated 3 mins ago</small>*/}\n                                            {/*</Card.Footer>*/}\n                                        </Card>\n                                    ))}\n\n                                </CardDeck>\n                            </Row>\n                            <Row>\n                                <Button onClick={this.props.returnToSearch}>Back To Search</Button>\n                            </Row>\n                        </Container>\n                        </Row> : null}\n                    </Container>\n                </div> : null}\n            </div>\n        )\n    }\n}\n\nexport default OutputContainer\n","import React, { Component } from 'react';\nimport IndexContainer from './components/IndexContainer.js'\nimport OutputContainer from './components/OutputContainer.js'\nimport scrollToComponent from 'react-scroll-to-component'\nimport axios from 'axios'\nimport './css/App.css'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showOutput: false,\n            names: [],\n            scores: [],\n            response: []\n        };\n        this.submitQuery = this.submitQuery.bind(this);\n        this.returnToSearch = this.returnToSearch.bind(this);\n        this.sendToBackend = this.sendToBackend.bind(this);\n    }\n\n    submitQuery(query) {\n        // alert(query);\n        this.sendToBackend(query);\n        // this.printResponse()\n    }\n\n    sendToBackend(query) {\n      // console.log(query)\n        axios.get('/search/?keyword='+query)\n            .then(response => this.setState(\n                {response: response['data']}, () => this.printResponse()\n              )\n            );\n    }\n\n    printResponse() {\n        // console.log(this.state.response)\n        this.setState(\n            {showOutput: true}, () => this.scrollToOutput()\n          )\n    }\n\n    scrollToOutput() {\n        scrollToComponent(this.output, { align: 'top',  duration: 300});\n    }\n\n    returnToSearch() {\n        scrollToComponent(this.top, { duration: 300});\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <link\n                        rel=\"stylesheet\"\n                        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n                        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n                        crossOrigin=\"anonymous\"\n                    />\n                </header>\n                <body>\n                    <div className=\"top lip-background cd-fixed-bg cd-fixed-bg--1\" ref={(section) => { this.top = section; }}>\n                        <div className=\"lip-opacity\">\n                            <div className=\"lip-container\" style={{marginTop: 3.5 + 'em'}}>\n                                <img src={require('./images/title.png')} />\n                                <IndexContainer onClick={this.submitQuery}/>\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <OutputContainer className=\"output\" ref={(section) => { this.output = section; }}\n                            showOutput = {this.state.showOutput}\n                            returnToSearch = {this.returnToSearch}\n                            response = {this.state.response}/>\n                    </div>\n                </body>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}